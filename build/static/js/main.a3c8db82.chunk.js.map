{"version":3,"sources":["components/Header.js","service/requests.js","components/ShortenForm.js","App.js","index.js"],"names":["Header","props","Navbar","bg","variant","Brand","href","Badge","onClick","window","open","focus","pill","axios","defaults","headers","post","getShortLink","longUrl","shortCode","a","post_data","long_url","isValidShortCode","isShortCodeAvailable","short_code","data","code","length","test","get","status","ShortenForm","useState","setlongUrl","shortUrl","setshortUrl","generationError","setgenerationError","copyTag","setcopyTag","faSearch","checkAvailableIcon","setcheckAvailableIcon","checkCodeAvaiblableTag","setcheckCodeAvaiblableTag","setshortCode","generateShortLink","shortLink","short_url","Container","className","Form","Group","Label","Control","type","placeholder","onChange","e","target","value","Text","InputGroup","readOnly","Append","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","id","icon","faGlobe","text","faClipboard","setTimeout","faCheckCircle","faTimesCircle","Button","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3c8db82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Badge } from \"react-bootstrap\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#\">URL Shortner</Navbar.Brand>\r\n        <Badge\r\n          onClick={() => {\r\n            window.open(\"https://www.linkedin.com/in/manas-acharya/\");\r\n            window.focus();\r\n          }}\r\n          pill\r\n          variant=\"dark\"\r\n        >\r\n          built by Manas Acharya\r\n        </Badge>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  axios.defaults.baseURL = \"http://127.0.0.1:5000\";\r\n}\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\n// POST /api/shorteb\r\n// expects {long_url: ''}\r\n// returns short_url\r\nexport const getShortLink = async (longUrl, shortCode) => {\r\n  try {\r\n    var post_data = { long_url: longUrl };\r\n    if (\r\n      isValidShortCode(shortCode) &&\r\n      (await isShortCodeAvailable(shortCode))\r\n    ) {\r\n      // shortCode set\r\n      post_data.short_code = shortCode;\r\n    } else if (shortCode) {\r\n      // shortCode passed but not available\r\n      return;\r\n    }\r\n    const data = await axios.post(`/api/shorten`, post_data);\r\n    return data.data;\r\n  } catch (e) {\r\n    return;\r\n  }\r\n};\r\n\r\n// validate shortcode\r\nconst isValidShortCode = (code) => {\r\n  return code && code.length >= 5 && !/\\s/g.test(code);\r\n};\r\n\r\n// GET /api/code_available\r\nexport const isShortCodeAvailable = async (short_code) => {\r\n  try {\r\n    if (!isValidShortCode(short_code)) return false;\r\n    const data = await axios.get(`/api/code_available?code=${short_code}`);\r\n    return data.status === 200;\r\n  } catch (e) {\r\n    return;\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  InputGroup,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { getShortLink, isShortCodeAvailable } from \"../service/requests\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGlobe,\r\n  faClipboard,\r\n  faSearch,\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function ShortenForm(props) {\r\n  const [longUrl, setlongUrl] = useState(\"\");\r\n  const [shortUrl, setshortUrl] = useState(\"\");\r\n  const [generationError, setgenerationError] = useState(false);\r\n  const [copyTag, setcopyTag] = useState(\"Copy\");\r\n  const [checkAvailableIcon, setcheckAvailableIcon] = useState(faSearch);\r\n  const [checkCodeAvaiblableTag, setcheckCodeAvaiblableTag] = useState(\r\n    \"Check Code Availability\"\r\n  );\r\n  const [shortCode, setshortCode] = useState(\"\");\r\n\r\n  const generateShortLink = async () => {\r\n    if (longUrl.length > 0) {\r\n      setgenerationError(false);\r\n      const shortLink = await getShortLink(longUrl, shortCode);\r\n      if (shortLink) {\r\n        setshortUrl(shortLink.short_url);\r\n        return;\r\n      }\r\n    }\r\n    setgenerationError(true);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"shortenForm\">\r\n      <Form>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Long URL</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Long URL to be Shortened\"\r\n            onChange={(e) => setlongUrl(e.target.value)}\r\n          />\r\n          <Form.Text className=\"text-muted\">We love valid URLs</Form.Text>\r\n\r\n          <br />\r\n          <Form.Label>Shortened URL</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={shortUrl ? shortUrl : \"Short Link\"}\r\n              value={shortUrl}\r\n              readOnly\r\n            />\r\n\r\n            {shortUrl && (\r\n              <>\r\n                <InputGroup.Append>\r\n                  <InputGroup.Text>\r\n                    <OverlayTrigger\r\n                      placement=\"right\"\r\n                      delay={{ show: 250, hide: 250 }}\r\n                      overlay={<Tooltip id=\"editPostTooltip\">Visit</Tooltip>}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        icon={faGlobe}\r\n                        onClick={() => {\r\n                          window.open(shortUrl);\r\n                          window.focus();\r\n                        }}\r\n                      />\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Text>\r\n                </InputGroup.Append>\r\n                <InputGroup.Append>\r\n                  <InputGroup.Text>\r\n                    <OverlayTrigger\r\n                      placement=\"right\"\r\n                      delay={{ show: 250, hide: 250 }}\r\n                      overlay={\r\n                        <Tooltip id=\"editPostTooltip\">{copyTag}</Tooltip>\r\n                      }\r\n                    >\r\n                      <CopyToClipboard text={shortUrl}>\r\n                        <FontAwesomeIcon\r\n                          icon={faClipboard}\r\n                          onClick={() => {\r\n                            setcopyTag(\"Copied!\");\r\n                            setTimeout(() => {\r\n                              setcopyTag(\"Copy\");\r\n                            }, 5000);\r\n                          }}\r\n                        />\r\n                      </CopyToClipboard>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Text>\r\n                </InputGroup.Append>\r\n              </>\r\n            )}\r\n\r\n            <>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"short code (at least 5 character long + no space)\"\r\n                onChange={(e) => {\r\n                  setshortCode(e.target.value);\r\n                }}\r\n              />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>\r\n                  <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 250 }}\r\n                    overlay={\r\n                      <Tooltip id=\"editPostTooltip\">\r\n                        {checkCodeAvaiblableTag}\r\n                      </Tooltip>\r\n                    }\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={checkAvailableIcon}\r\n                      onClick={async () => {\r\n                        if (await isShortCodeAvailable(shortCode)) {\r\n                          setcheckAvailableIcon(faCheckCircle);\r\n                          setcheckCodeAvaiblableTag(\"Code Available\");\r\n                        } else {\r\n                          setcheckAvailableIcon(faTimesCircle);\r\n                          setcheckCodeAvaiblableTag(\"Code Unavailable\");\r\n                        }\r\n                        setTimeout(() => {\r\n                          setcheckAvailableIcon(faSearch);\r\n                          setcheckCodeAvaiblableTag(\"Check Code Availability\");\r\n                        }, 3000);\r\n                      }}\r\n                    />\r\n                  </OverlayTrigger>\r\n                </InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </>\r\n          </InputGroup>\r\n          {shortUrl && (\r\n            <Form.Text className=\"text-muted\">\r\n              Short Links are active for 48 hours only\r\n            </Form.Text>\r\n          )}\r\n          {generationError && (\r\n            <h6>There seems to be some error with your URL or custom code</h6>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={async () => {\r\n            await generateShortLink();\r\n          }}\r\n        >\r\n          Generate Short Link\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport ShortenForm from \"./components/ShortenForm\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <ShortenForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}